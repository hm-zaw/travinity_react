{/* Dialog Card */}
      {dialogData && (
      <dialog ref={dialog_card} className="modal rounded-lg shadow-lg p-6 bg-white w-4/5 relative">
        {/* Cancel Icon */}
        <button className="absolute top-3 right-3 text-gray-400 hover:text-gray-600" onClick={() => toggleModal(false)} aria-label="Close" >
          <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={2} >
            <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>

        <div className='w-full flex flex-row'>
          <div className='w-1/2'>
              <p className="">
                <span className='font-semibold font-poppins text-lg'> {dialogData.name} </span>
              </p>
              <p className="mb-1">
                <i className="fa-duotone fa-light fa-map-location pr-1"></i> <span className='text-xs'> Pickup: {dialogData.pickup} </span> 
              </p>
              <img src={dialogData.img} alt="" className='items-center' />
              <p className='font-poppins text-sm'> <span className='font-bold text-lg'> ${dialogData.price} </span> for 1 day </p>
              <p className='text-xs font-poppins'> <i class="fa-solid fa-user-tie-hair mr-1"></i> Driver included </p>
              </div>
          <div className='w-1/2'>
            <form className="space-y-4 mt-4" onSubmit={handlePaymentSubmit}>
              <div className="flex mb-4 items-center">
                <i class="fa-brands fa-cc-visa text-3xl mr-2"></i> 
                <span className='text-xl font-semibold font-poppins'> Payment details here </span>
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700">Cardholder Name</label>
                <input type="text" name='holder-name' onChange={handleInput} placeholder="John Doe" className="mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" required />
              </div>
              <div>
                <label className="block text-sm font-medium text-gray-700">Card Number</label>
                <input type="text" name='cardNo' onChange={handleInput} placeholder="1234 5678 9012 3456" className="mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" required />
              </div>
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700">Expiration Date</label>
                  <input type="text" name='expired' onChange={handleInput} placeholder="MM/YY" className="mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" required />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700">CVV</label>
                  <input type="text" name='cvv' onChange={handleInput} placeholder="123" className="mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" required />
                </div>
              </div>

              <div className="flex justify-end space-x-4 mt-5">
                <button className="px-4 py-2 bg-gray-300 rounded-md hover:bg-gray-400" onClick={() => toggleModal(false)} >
                  Cancel
                </button>
                <button type="submit" className="px-4 py-2 bg-sky-700 text-white rounded-md hover:bg-sky-800">
                  Confirm
                </button>
              </div>
            </form>
          </div>
        </div>
        

        
      </dialog>
      )}



      hotel
      <section className="mt-20py-6 bg-gray-100 min-h-screen">
        <div className="container mx-auto px-4">
          <div className="flex flex-col md:flex-row gap-6">
            {/* Filters Section */}
            <div className="w-full md:w-1/4">
              <div className="bg-white p-6 rounded-xl shadow-lg">
                <h2 className="text-2xl font-bold mb-4">Filters</h2>
                
                {/* Price Range Filter */}
                <div className="mb-6">
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    Price Range (up to ${priceRange})
                  </label>
                  <input
                    type="range"
                    min="0"
                    max="2000"
                    value={priceRange}
                    onChange={(e) => setPriceRange(Number(e.target.value))}
                    className="w-full"
                  />
                </div>

                {/* Star Rating Filter */}
                <div className="mb-6">
                  <h3 className="text-lg font-medium mb-2">Star Rating</h3>
                  {[5, 4, 3, 2, 1].map((star) => (
                    <label key={star} className="flex items-center space-x-2 mb-2">
                      <input
                        type="checkbox"
                        checked={selectedStars.includes(star)}
                        onChange={() => {
                          setSelectedStars(prev =>
                            prev.includes(star)
                              ? prev.filter(s => s !== star)
                              : [...prev, star]
                          );
                        }}
                        className="form-checkbox"
                      />
                      <span>{star} Stars</span>
                    </label>
                  ))}
                </div>
              </div>
            </div>

            {/* Hotel Results */}
            <div className="w-full md:w-3/4">
              <div className="bg-white p-6 rounded-xl shadow-lg mb-6">
                <form onSubmit={handleSearch} className="space-y-4">
                  {/* Destination Search */}
                  <div className="relative">
                    <input
                      type="text"
                      value={searchState.destination}
                      onChange={(e) => {
                        setSearchState(prev => ({...prev, destination: e.target.value}));
                        fetchHotelDestinations(e.target.value);
                      }}
                      placeholder="Where are you going?"
                      className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-yellow-400 focus:outline-none"
                    />
                    {destinationSuggestions.length > 0 && (
                      <div className="absolute z-10 w-full bg-white border rounded-lg shadow-lg mt-1">
                        {destinationSuggestions.map((suggestion) => (
                          <div
                            key={suggestion.id}
                            className="p-2 hover:bg-gray-100 cursor-pointer"
                            onClick={() => {
                              setSearchState(prev => ({
                                ...prev,
                                destination: suggestion.name,
                                destId: suggestion.id,
                                searchType: suggestion.type
                              }));
                              setDestinationSuggestions([]);
                            }}
                          >
                            {suggestion.name}, {suggestion.country}
                          </div>
                        ))}
                      </div>
                    )}
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
                    {/* Check-in Date */}
                    <input
                      type="date"
                      value={searchState.checkInDate}
                      onChange={(e) => setSearchState(prev => ({...prev, checkInDate: e.target.value}))}
                      className="p-3 border rounded-lg focus:ring-2 focus:ring-yellow-400 focus:outline-none"
                    />

                    {/* Check-out Date */}
                    <input
                      type="date"
                      value={searchState.checkOutDate}
                      onChange={(e) => setSearchState(prev => ({...prev, checkOutDate: e.target.value}))}
                      className="p-3 border rounded-lg focus:ring-2 focus:ring-yellow-400 focus:outline-none"
                    />

                    {/* Guests Selection */}
                    <select
                      value={`${searchState.rooms},${searchState.adults},${searchState.children}`}
                      onChange={handleGuestChange}
                      className="p-3 border rounded-lg focus:ring-2 focus:ring-yellow-400 focus:outline-none"
                    >
                      <option value="1,2,0">1 Room, 2 Adults</option>
                      <option value="1,2,1">1 Room, 2 Adults, 1 Child</option>
                      <option value="1,2,2">1 Room, 2 Adults, 2 Children</option>
                      <option value="2,4,0">2 Rooms, 4 Adults</option>
                    </select>

                    {/* Search Button */}
                    <button
                      type="submit"
                      className="bg-gradient-to-r from-yellow-500 to-yellow-600 text-gray-900 p-3 rounded-lg hover:shadow-xl transition flex items-center justify-center gap-2 font-semibold"
                    >
                      <FontAwesomeIcon icon={faSearch} />
                      Search Hotels
                    </button>
                  </div>
                </form>
              </div>

              {loading ? (
                <div className="flex justify-center items-center h-64">
                  <FontAwesomeIcon icon={faSpinner} spin size="3x" />
                </div>
              ) : error ? (
                <div className="text-red-500 mb-4 p-3 bg-red-50 rounded-lg">{error}</div>
              ) : (
                <div className="grid gap-6">
                  {filteredHotels.map((hotel) => (
                    <div key={hotel.id}
                      className="bg-white p-6 rounded-xl shadow-lg hover:shadow-2xl transition-shadow mb-6"
                    >
                      <div className="flex flex-col md:flex-row gap-6">
                        {/* Hotel Image */}
                        <div className="w-full md:w-1/4 flex-shrink-0">
                          <div className="relative h-48 rounded-lg overflow-hidden">
                            <img src={hotel.mainPhoto} alt={hotel.name}
                              className="w-full h-full object-cover transform hover:scale-110 transition-transform duration-500"
                            />
                            {hotel.isPreferred && (
                              <div className="absolute top-2 right-2 bg-blue-500 text-white px-2 py-1 rounded-full text-xs">
                                Preferred Property
                              </div>
                            )}
                          </div>
                        </div>

                        {/* Hotel Details */}
                        <div className="w-full md:w-3/4">
                          {/* Header with Name and Price */}
                          <div className="flex justify-between items-start mb-4">
                            <div>
                              <h3 className="text-2xl font-bold text-gray-900">{hotel.name}</h3>
                              <p className="text-gray-600 flex items-center gap-2 mt-1">
                                <FontAwesomeIcon icon={faLocationDot} />
                                {hotel.address}
                              </p>
                            </div>
                            <div className="text-right">
                              <p className="text-3xl font-bold text-green-600">
                                {hotel.price.currency} {hotel.price.amount.toFixed(2)}
                              </p>
                              <p className="text-sm text-gray-500">per night</p>
                            </div>
                          </div>

                          {/* Rating and Stars Section */}
                          <div className="flex items-center gap-4 mb-4">
                            <div className="flex items-center">
                              {[...Array(hotel.stars)].map((_, i) => (
                                <FontAwesomeIcon key={i} icon={faStar} className="text-yellow-400" />
                              ))}
                            </div>
                            <div className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full">
                              {hotel.rating.toFixed(1)}/10 • {hotel.reviewWord}
                            </div>
                            <div className="text-gray-600">
                              {hotel.reviewCount.toLocaleString()} reviews
                            </div>
                          </div>

                          {/* Additional Info Grid */}
                          <div className="grid grid-cols-2 md:grid-cols-3 gap-6 text-sm mb-6">
                            <div className="flex items-center gap-2">
                              <FontAwesomeIcon icon={faBed} className="text-indigo-500" />
                              <div>
                                <p className="font-semibold text-gray-600">Room Type</p>
                                <p className="text-gray-800">Standard Room</p>
                              </div>
                            </div>

                            <div className="flex items-center gap-2">
                              <FontAwesomeIcon icon={faUser} className="text-red-500" />
                              <div>
                                <p className="font-semibold text-gray-600">Guests</p>
                                <p className="text-gray-800">{searchState.adults} Adults, {searchState.children} Children</p>
                              </div>
                            </div>

                            <div className="flex items-center gap-2">
                              <FontAwesomeIcon icon={faHotel} className="text-blue-500" />
                              <div>
                                <p className="font-semibold text-gray-600">Property Class</p>
                                <p className="text-gray-800">{hotel.stars}-Star Hotel</p>
                              </div>
                            </div>
                          </div>

                          {/* Book Now Button */}
                          <div className="flex justify-end items-center border-t pt-4">
                            <button
                              className="bg-gradient-to-r from-yellow-500 to-yellow-600 text-gray-900 px-6 py-3 rounded-lg hover:shadow-xl transition flex items-center gap-2 text-lg font-semibold"
                              onClick={() => window.open(hotel.bookingLink, '_blank')}
                            >
                              <FontAwesomeIcon icon={faMoneyBill} />
                              Book Now
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </div>
        </div>
      </section>